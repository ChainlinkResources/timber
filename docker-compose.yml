version: '3.5'

services:
  # A local blockchain instance
  ganache:
    image: trufflesuite/ganache-cli:latest
    command: ganache-cli --accounts=10 --defaultBalanceEther=1000 --gasLimit=8000000
    ports:
      - "8545:8545"
    networks:
      - merkle_tree_network

  # The main microservice for reconstructing a merkle tree
  merkle-tree:
    build:
      context: ./merkle-tree
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - ganache
      - mongo
      - deployer # comment out for testing?
    volumes:
      - ./merkle-tree/src:/app/src
      - ./merkle-tree/config:/app/config
      - ./merkle-tree/test:/app/test
      - ./merkle-tree/.babelrc:/app/.babelrc
      - ./merkle-tree/setup-mongo-acl-for-new-users.js:/app/setup-mongo-acl-for-new-users.js
      - /var/run/docker.sock:/var/run/docker.sock
      # - ./merkle-tree/contracts/:/app/contracts:delegated # required if doing a 'local' deployment
      # - ./merkle-tree/build/:/app/build # required if doing a 'local' deployment
    ports:
      - "9000:80"
    environment:
      BLOCKCHAIN_HOST: ws://ganache
      BLOCKCHAIN_PORT: 8545
      DEPLOYER_HOST: http://deployer
      DEPLOYER_PORT: 80
      DEPLOYMENT_LOCALITY: 'remote' # specify 'local' or 'remote' deployment
    networks:
      - merkle_tree_network

  # The database storing the merkle tree
  mongo:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
      - MONGO_INITDB_DATABASE=merkle_tree
    volumes:
      - ./merkle-tree/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - mongodb-volume:/data/db
    networks:
      - merkle_tree_network

  # The deployer microservice is an example of a microservice which might deploy a merkle tree smart contract.
  deployer:
    build:
      context: ./deployer
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - ganache
    volumes:
      - ./deployer/src:/app/src
      - ./deployer/config:/app/config
      - ./deployer/test:/app/test
      - ./deployer/.babelrc:/app/.babelrc
      - leveldb-volume:/app/db
      - ./deployer/contracts/:/app/contracts:delegated
      - ./deployer/build/:/app/build
    environment:
      BLOCKCHAIN_HOST: ws://ganache
      BLOCKCHAIN_PORT: 8545
      MERKLE_TREE_HOST: http://merkle-tree
      MERKLE_TREE_PORT: 80
      DEPLOYER_HOST: http://deployer ## included so it can find itself
      DEPLOYER_PORT: 80
    networks:
      - merkle_tree_network

volumes:
  mongodb-volume: {}
  leveldb-volume: {}

networks:
  merkle_tree_network:
    name: merkle_tree_network
